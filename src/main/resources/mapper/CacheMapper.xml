<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.gantleman.shopd.dao.CacheMapper">
  <resultMap id="BaseResultMap" type="com.github.gantleman.shopd.entity.Cache">
    <id column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="c_name" jdbcType="VARCHAR" property="cName" />
    <result column="c_index" jdbcType="BIGINT" property="cIndex" />
    <result column="c_host" jdbcType="CHAR" property="cHost" />
    <result column="c_host2" jdbcType="CHAR" property="cHost2" />
    <result column="c_stamp" jdbcType="BIGINT" property="cStamp" />
    <result column="c_stamp2" jdbcType="BIGINT" property="cStamp2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    c_id, c_name, c_index, c_host, c_host2, c_stamp, c_stamp2
  </sql>
  <select id="selectByExample" parameterType="com.github.gantleman.shopd.entity.CacheExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from cache
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cache
    where c_id = #{cId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cache
    where c_id = #{cId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.gantleman.shopd.entity.CacheExample">
    delete from cache
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.gantleman.shopd.entity.Cache">
    insert into cache (c_id, c_name, c_index, 
      c_host, c_host2, c_stamp, c_stamp2
      )
    values (#{cId,jdbcType=INTEGER}, #{cName,jdbcType=VARCHAR}, #{cIndex,jdbcType=BIGINT}, 
      #{cHost,jdbcType=CHAR}, #{cHost2,jdbcType=CHAR}, #{cStamp,jdbcType=BIGINT}, #{cStamp2,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.gantleman.shopd.entity.Cache">
    insert into cache
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        c_id,
      </if>
      <if test="cName != null">
        c_name,
      </if>
      <if test="cIndex != null">
        c_index,
      </if>
      <if test="cHost != null">
        c_host,
      </if>
      <if test="cHost2 != null">
        c_host2,
      </if>
      <if test="cStamp != null">
        c_stamp,
      </if>
      <if test="cStamp2 != null">
        c_stamp2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="cName != null">
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cIndex != null">
        #{cIndex,jdbcType=BIGINT},
      </if>
      <if test="cHost != null">
        #{cHost,jdbcType=CHAR},
      </if>
      <if test="cHost2 != null">
        #{cHost2,jdbcType=CHAR},
      </if>
      <if test="cStamp != null">
        #{cStamp,jdbcType=BIGINT},
      </if>
      <if test="cStamp2 != null">
        #{cStamp2,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.gantleman.shopd.entity.CacheExample" resultType="java.lang.Long">
    select count(*) from cache
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cache
    <set>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.cName != null">
        c_name = #{record.cName,jdbcType=VARCHAR},
      </if>
      <if test="record.cIndex != null">
        c_index = #{record.cIndex,jdbcType=BIGINT},
      </if>
      <if test="record.cHost != null">
        c_host = #{record.cHost,jdbcType=CHAR},
      </if>
      <if test="record.cHost2 != null">
        c_host2 = #{record.cHost2,jdbcType=CHAR},
      </if>
      <if test="record.cStamp != null">
        c_stamp = #{record.cStamp,jdbcType=BIGINT},
      </if>
      <if test="record.cStamp2 != null">
        c_stamp2 = #{record.cStamp2,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cache
    set c_id = #{record.cId,jdbcType=INTEGER},
      c_name = #{record.cName,jdbcType=VARCHAR},
      c_index = #{record.cIndex,jdbcType=BIGINT},
      c_host = #{record.cHost,jdbcType=CHAR},
      c_host2 = #{record.cHost2,jdbcType=CHAR},
      c_stamp = #{record.cStamp,jdbcType=BIGINT},
      c_stamp2 = #{record.cStamp2,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.gantleman.shopd.entity.Cache">
    update cache
    <set>
      <if test="cName != null">
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="cIndex != null">
        c_index = #{cIndex,jdbcType=BIGINT},
      </if>
      <if test="cHost != null">
        c_host = #{cHost,jdbcType=CHAR},
      </if>
      <if test="cHost2 != null">
        c_host2 = #{cHost2,jdbcType=CHAR},
      </if>
      <if test="cStamp != null">
        c_stamp = #{cStamp,jdbcType=BIGINT},
      </if>
      <if test="cStamp2 != null">
        c_stamp2 = #{cStamp2,jdbcType=BIGINT},
      </if>
    </set>
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.gantleman.shopd.entity.Cache">
    update cache
    set c_name = #{cName,jdbcType=VARCHAR},
      c_index = #{cIndex,jdbcType=BIGINT},
      c_host = #{cHost,jdbcType=CHAR},
      c_host2 = #{cHost2,jdbcType=CHAR},
      c_stamp = #{cStamp,jdbcType=BIGINT},
      c_stamp2 = #{cStamp2,jdbcType=BIGINT}
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
</mapper>